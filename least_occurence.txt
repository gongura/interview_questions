import java.util.Arrays;

public class HashMapEx {
	
	static int leastFrequent(int arr[], int n) {
		int min_count = n+1;
		int cur_count = 1;
		int res = -1;
		Arrays.sort(arr);
		System.out.println(Arrays.toString(arr));
		for(int i=1; i<n; i++) {
			if(arr[i] == arr[i-1]) {
				cur_count++;
			} else {
				if(cur_count < min_count) {
					min_count = cur_count;
					res = arr[i-1];
				}
				cur_count = 1;
			}
		}
		if(cur_count < min_count) {
			min_count = cur_count;
			res = arr[n-1];
		}
		return res;
	}
	public static void main(String[] args) {
		int arr[] = {3,4,5,6,7,2,3,4,4,5,6,7,7,5,4};
        int len = arr.length;
        System.out.print(leastFrequent(arr, len));

	}
}
=========================================================================

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

public class HashMapEx {
	
	static int leastFrequent(int arr[], int n) {
		Map<Integer,Integer> count = new HashMap<Integer,Integer>();
		
		 for(int i = 0; i < n; i++)
	        {
	            int key = arr[i];
	            if(count.containsKey(key))
	            {
	                int freq = count.get(key);
	                freq++;
	                count.put(key,freq);
	            }
	            else
	                count.put(key,1);
	        }
		 int min_count = n+1, res = -1;
	        for(Entry<Integer,Integer> val : count.entrySet())
	        {
	            if (min_count >= val.getValue())
	            {
	                res = val.getKey();
	                min_count = val.getValue();
	            }
	        }
	         
	        return res;
	    }
	public static void main(String[] args) {
		int arr[] = {3,4,5,6,7,2,3,4,4,5,6,7,7,5,4};
        int len = arr.length;
        System.out.print(leastFrequent(arr, len));

	}
}